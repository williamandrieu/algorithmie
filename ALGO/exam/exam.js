const elements = [902147, 927233, 981469, 970459, 981198, 962175, 963638, 911243, 904618, 915609, 986440, 925743, 914929, 947372, 954641, 988059, 973886, 959807, 903653, 953871, 995420, 977364, 928120, 914418, 934120, 915184, 935620, 997402, 916284, 989866, 906701, 946335, 964813, 955884, 917878, 920837, 941819, 949124, 961304, 905898, 994159, 983425, 984926, 902177, 974537, 907977, 965434, 977145, 975602, 982168, 928089, 904422, 903579, 980363, 951054, 971385, 952644, 971350, 903096, 903017, 902198, 967864, 921411, 994729, 952132, 976697, 942070, 951452, 965243, 944240, 907095, 952445, 987762, 913427, 992860, 991972, 991294, 999678, 978449, 911140, 931072, 918917, 973957, 956656, 904979, 956708, 906787, 948342, 986439, 923456, 964419, 953171, 942276, 961477, 906701, 993190, 986295, 983191, 997515, 958543, 954646, 941282, 929917, 937170, 919680, 965933, 906401, 988028, 998337, 926056, 942843, 903387, 975723, 900824, 984131, 994849, 917095, 982308, 951601, 994912, 917932, 995002, 901268, 947963, 926270, 922359, 922598, 934576, 982377, 910254, 965642, 947730, 951587, 956918, 922488, 995402, 958710, 935337, 919034, 993290, 900016, 948742, 915113, 991408, 908650, 987176, 959939, 911808, 945013, 995361, 965057, 910487, 911815, 973263, 915117, 912524, 993616, 945710, 917987, 938707, 978633, 902287, 982840, 973290, 941192, 967583, 937109, 925355, 937492, 946368, 919044, 916878, 933580, 915177, 996181, 949615, 915584, 966533, 972925, 946080, 901407, 953079, 912909, 985866, 985978, 945659, 951521, 918902, 957255, 978250, 943333, 913350, 903497, 925674, 903550, 996762, 908008, 909580, 901828, 917842, 904451, 935488, 948897, 931922, 989236, 961256, 920864, 929041, 917289, 939262, 956424, 964196, 919704, 993712, 962925, 962883, 901871, 948579, 916558, 926224, 925317, 964944, 981125, 904554, 981761, 920273, 925451, 917543, 973409, 972389, 990778, 926325, 960190, 967142, 910929, 985207, 993343, 934117, 995928, 936236, 967059, 985861, 906642, 934100, 952242, 971165, 904530, 908943, 992504, 936738, 999790, 938973, 922683, 909111, 933264, 994623, 996391, 978788, 986876, 974376, 956068, 989381, 990633, 998632, 921555, 947803, 996433, 927797, 924260, 955624, 934558, 906306, 901415, 920455, 975301, 917182, 913318, 912451, 984286, 991697, 920604, 900203, 983187, 996155, 944188, 932894, 906819, 928980, 993440, 925513, 968928, 965369, 956727, 922930, 944709, 949329, 952338, 917810, 977442, 973761, 927953, 913860, 919506, 984423, 943710, 941756, 950854, 956951, 942479, 931057, 948934, 924318, 955535, 984237, 929924, 971704, 960820, 908314, 916397, 918577, 911317, 936189, 982008, 919695, 998707, 968251, 998665, 980049, 904308, 960332, 926177, 935943, 951974, 912166, 967969, 999593, 908874, 998621, 932099, 927292, 916621, 904078, 910418, 948532, 980376, 911459, 965376, 936476, 976249, 902420, 951001, 999658, 932474, 918644, 910485, 978877, 961223, 951869, 999948, 911532, 986043, 925657, 926718, 966964, 994255, 952252, 987406, 952919, 918199, 990079, 981387, 999664, 964751, 973939, 971056, 959606, 966608, 951757, 927963, 956514, 974436, 971754, 966596, 953522, 994513, 914324, 957928, 986714, 950422, 914271, 928026, 938892, 994372, 901469, 941696, 912179, 903854, 999007, 978400, 989958, 968540, 961878, 962302, 904723, 931168, 913754, 986641, 961328, 918416, 998846, 960885, 923313, 924445, 922939, 984658, 983120, 973182, 912852, 947440, 976381, 992888, 994520, 973683, 934808, 906672, 997303, 943219, 935470, 968410, 901102, 926609, 937512, 995599, 943743, 972456, 984411, 943401, 965870, 900032, 947978, 951126, 910581, 916868, 974782, 965041, 926720, 991646, 923837, 970591, 958085, 977483, 994851, 991677, 924537, 967600, 998758, 924693, 974293, 988219, 974691, 933770, 938668, 946181, 900800, 975695, 943073, 924446, 931542, 930935, 938146, 945041, 982403, 911502, 911169, 920191, 958779, 995409, 919092, 946351, 978031, 957908, 983072, 901295, 989417, 939240, 980152, 908258, 918676, 930593, 978345, 982075, 908565, 909714, 981948, 985201, 981856, 910033, 921505, 959342, 908098];
const search = [921224, 968822, 918451, 948444, 935730, 949211, 946514, 944470, 997237, 923172, 910185, 955273, 928601, 947816, 924847, 902963, 945635, 944483, 978362, 999464, 989726, 909037, 990781, 905200, 941546, 929382, 996823, 915965, 946208, 990623, 914972, 961552, 909603, 946016, 991130, 983766, 931835, 901871, 936103, 973408, 910272, 915539, 976770, 979466, 968869, 978517, 987346, 929515, 958918, 951917, 924068, 941731, 979398, 956432, 903741, 907115, 966227, 958051, 953490, 956162, 939495, 925802, 944730, 917252, 906225, 981541, 958373, 979171, 973345, 932974, 918796, 999464, 960468, 902537, 990366, 965356, 947237, 977282, 987462, 991555, 992872, 960504, 926443, 972504, 944847, 953705, 925198, 957063, 969438, 951863, 982635, 985886, 924528, 928347, 967149, 947818, 931062, 999451, 918868, 994914, 920039, 922758, 916771, 989102, 913743, 966190, 943210, 911771, 949772, 966432, 925345, 945340, 961699, 970058, 979682, 900376, 902925, 929470, 906889, 900830, 915887, 959469, 932136, 911868, 949755, 927003, 997707, 967243, 970416, 910637, 960224, 901385, 942820, 965671, 969246, 943916, 948186, 917296, 911276, 996956, 937363, 900248, 973769, 959113, 932370, 959092, 997964, 909392, 927600, 983364, 931976, 994916, 946342, 948738, 907052, 973900, 975467, 905897, 994268, 936118, 925990, 951034, 987992, 987979, 937299, 914031, 991196, 923046, 954358, 982549, 913737, 990803, 917038, 948915, 969097, 998776, 974157, 954274, 971946, 909836, 980125, 931789, 939739, 906157, 973743, 994307, 934944, 995670, 986648, 917492, 929850, 938233, 920161, 995890, 988086, 948444, 994820, 958416, 993198, 988847, 992659, 972202, 902594, 970113, 922120, 902496, 985749, 987587, 918630, 919380, 964419, 906163, 909658, 906857, 965925, 997556, 901670, 938142, 909712, 927376, 983935, 928154, 945024, 983704, 944430, 949238, 973018, 901987, 905837, 991893, 918961, 989500, 907666, 999768, 969762, 901964, 986367, 913493, 986659, 959559, 909997, 980153, 947300, 986462, 939808, 996437, 967516, 991534, 937304, 918683, 936555, 918813, 903950, 995214, 911292, 981292, 945344, 900139, 983373, 960678, 900642, 990054, 935862, 961518, 944596, 970433, 955712, 948330, 936221, 907668, 927963, 952194, 905566, 922764, 937126, 989753, 926152, 980255, 927201, 978720, 963879, 901545, 921811, 990857, 908352, 943196, 973410, 969790, 986847, 952537, 911233, 916405, 974820, 984336, 934475, 968595, 941990, 912539, 985166, 942817, 968980, 922343, 902066, 991358, 979198, 928907, 956507, 965143, 992567, 917910, 963177, 900633, 946655, 949102, 999135, 933319, 955318, 996997, 952740, 963290, 978983, 986054, 927382, 979545, 909712, 921712, 912281, 978315, 940641, 975717, 982760, 974627, 902827, 942674, 923383, 925765, 911098, 917101, 900972, 981103, 950215, 978536, 960185, 941227, 939050, 928630, 911306, 932215, 989757, 915415, 920587, 978490, 934997, 911674, 963252, 958898, 969384, 912296, 973039, 999178, 900994, 928309, 919233, 972281, 901726, 964770, 965026, 966467, 978107, 945544, 905216, 997287, 977586, 941467, 949880, 989396, 975769, 912579, 960812, 917916, 984628, 943554, 971414, 998322, 937636, 973417, 900488, 987064, 990567, 907019, 964945, 942441, 936010, 980287, 933207, 971997, 991531, 932608, 931626, 956901, 925016, 909067, 930955, 968132, 937123, 908723, 989278, 907003, 918930, 975212, 912550, 929917, 917918, 947892, 994926, 933446, 902320, 949222, 980628, 916855, 952928, 979708, 923205, 954375, 959749, 976905, 997481, 943869, 905302, 970376, 957727, 926559, 914918, 936146, 900425, 900887, 932641, 960305, 982000, 936200, 996848, 988784, 980460, 975577, 935660, 951266, 963204, 974552, 919809, 942974, 954184, 929580, 948809, 947348, 978661, 958321, 931409, 948780, 933165, 996687, 906303, 934116, 978295, 985614, 910882, 940710, 977086, 916072, 953035, 942126, 987491, 995359, 913126, 972156, 971394, 994886, 983735, 914406, 968298, 956997, 931907, 988856, 919931, 976538, 969674, 973133, 931501, 912364, 940996, 906421, 942861, 989053, 951204, 906913, 916910, 972455, 949992, 927856, 933563, 987330];
var searched = [];
// Ne rien modifier au dessus de ce commentaire

// Fonction qui retourne le plus petit element du tableau elements
function plusPetitElement(elements) {
	var result = 1000000;;
	// Ne rien modifier au dessus de ce commentaire
	

	for (var i = elements.length - 1; i >= 0; i--) {
		if (elements[i] < result){
			result = elements[i];
			 
		}
	}	
	// Ne rien modifier au dessous de ce commentaire
	return result;
}

// Fonction qui retourne le plus grand element du tableau elements
function plusGrandElement(elements) {
	var result = 900000;
	// Ne rien modifier au dessus de ce commentaire
	
		for (var i = elements.length - 1; i >= 0; i--) {
			if (elements[i] > result){
				result = elements[i];
		}
	}
	// Ne rien modifier au dessous de ce commentaire
	return result;
}

// Fonction qui recherche les éléments du tableau search dans le tableau elements
function chercherElement(search, elements) {
	// Ne rien modifier au dessus de ce commentaire
	for (var i = elements.length - 1; i >= 0; i--) {
		for (var z = 0; z < search.length; z++) {
		
		if (elements[i] != search[z]){
			
			 
		} 	else if (elements[i] == search[z]){
				ajouteSearched(search[i]);
			}
		}
	}

	
	// Ne rien modifier au dessous de ce commentaire
}

// Fonction qui additionne tous les elements du tableau elements
function additionnerElement(elements) {
	var result = 0;
	// Ne rien modifier au dessus de ce commentaire
		for (var i = elements.length - 1; i >= 0; i--) {
			result += elements[i];
		}
	// Ne rien modifier au dessous de ce commentaire
	return result;
}

// Fonction qui insère de nouveau élement dans le tableau searched
// Ne pas modifier cette fonction
function ajouteSearched(element) {
	searched.push(element);
}

// Fonction qui tri et retire les doublon d'un tableau
// Ne pas modifier cette fonction
function unique(table) {
	return table.sort().filter(function(item, pos, ary) {
		return !pos || item != ary[pos - 1];
	})
}

// Fonction qui affiche les elements cherchés de la fonction chercherElement
// Ne pas modifier cette fonction
function afficherElementChercher(searched) {
	searched = unique(searched);
	var html = 'Ces éléments du tableau search sont présents dans le tableau élément : ';
	for(let index of searched.keys()) {
		if (index != 0) {
			html += ', ';
		}
		html += searched[index];
	}
return html;
}

// Ne rien modifier au dessous de ce commentaire
document.getElementById('plusPetitElement').innerHTML = 'Le plus petit élément est : ' + plusPetitElement(elements);
document.getElementById('plusGrandElement').innerHTML = 'Le plus grand élément est : ' + plusGrandElement(elements);
chercherElement(search, elements);
document.getElementById('chercherElement').innerHTML = afficherElementChercher(searched);
document.getElementById('additionnerElement').innerHTML = 'La somme des éléments est : ' + additionnerElement(elements);